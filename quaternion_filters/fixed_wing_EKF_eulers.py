
import numpy as np
from numpy import sqrt, cos, sin, tan
from .quaternion import Quaternion
from . import quaternion
import time
from .filter_log import DataLog
from numba import jit


G = 9.81
KTS2MS = 0.514444
FT2M = 0.3048


def euler2q(roll, pitch, heading):
    q = Quaternion.axis_angle(np.array([0, 0, 1.]), heading)
    q = q*Quaternion.axis_angle(np.array([0, 1., 0]), pitch)
    q = q*Quaternion.axis_angle(np.array([1., 0, 0]), roll)
    return q


def eulers(q):
    """
    returns: roll, pitch, heading
    """
    a, b, c, d = q.a, q.b, q.c, q.d
    phi = np.arctan2(2*(a*b + c*d),
                        1-2*(b**2 + c**2))
    theta = np.arcsin(2*(a*c - d*b))
    psi = np.arctan2(2*(a*d+b*c),
                        1-2*(c**2+d**2))
    return np.array([phi, theta, psi])


def normalize_heading_deg(val_deg):
    if val_deg > 360:
        return normalize_heading(val_deg - 360)
    elif val_deg < 0:
        return normalize_heading(val_deg + 360)
    else:
        return val_deg


class FixedWingEKFEulers:

    def __init__(self):

        self.es = np.array([0, 0, 0], dtype=float)  # roll, pitch, heading
        self.a = np.array([0.0, 0, -G], dtype=float)
        self.w = np.array([0.0, 0, 0], dtype=float)

        self.P = np.zeros((9, 9))
        self.P[1, 1] = 10
        self.P[2, 2] = 100

        #qerr = (.1*np.pi/180)**2
        herr = (180*np.pi/180)**2 / 20
        # Accel model is coordinated turn assumption. How far from this could we be?
        aerr_x = (.4*G)**2 / 1
        aerr_y = (.4*G)**2 / 1
        aerr_z = (.1*G)**2 / 1
        werr_x = (10*np.pi/180)**2 / 1  # 10 deg / sec
        werr_y = (10*np.pi/180)**2 / 1  # 10 deg / sec
        werr_z = (1*np.pi/180)**2 / 1   # 10 deg / sec
        self.Q = np.diag(np.hstack([0, 0, 0,
                                    aerr_x, aerr_y, aerr_z,
                                    werr_x, werr_y, werr_z]))

        accel_err = 1.5
        self.Raccel = np.diag(accel_err*np.ones((3,)))
        gyro_err = .0001
        self.Rgyro = np.diag(gyro_err * np.ones((3,)))

        mag_err = .01
        self.Rmag = np.diag(mag_err * np.ones((3,)))

        self.last_update = time.time()
        self.t0 = time.time()
        self.log = DataLog()

    def state_vec(self):
        return np.vstack(np.concatenate([self.es, self.a, self.w]))

    def set_state_vec(self, x):
        self.es = x[:3].flatten()
        self.a = x[3:6].flatten()
        self.w = x[6:9].flatten()
        self.log.set_state(self.state_vec(), self.P)

    def predict(self, dt=None):
        # Quaternion prediction
        roll, pitch, heading = self.es
        q = self.quaternion()
        wx, wy, wz = self.w
        qdelta = quaternion.Quaternion(1, wx/2*dt, wy/2*dt, wz/2*dt)  # small angle approximation of rotation
        qnext = q*qdelta

        a = np.array([0,0,-G]) + np.array([-sin(heading), cos(heading), 0])*G*tan(roll)
        ab = (q.inv()*quaternion.Quaternion.from_vec(a)*q).as_ndarray()[1:]
        
        self.a = ab

        qnext.normalize()
        self.es = np.array(eulers(qnext))

        F = self.calc_F(dt)
        self.P = F.dot(self.P).dot(F.T) + self.Q*dt

        self.log.predict(dt, self.state_vec(), self.P)

    def update_accel(self, accels):
        self.log.accel(accels)

        y = accels - self.a
        y = np.vstack(y)

        H = np.zeros((3, 9))

        H[0, 3] = 1
        H[1, 4] = 1
        H[2, 5] = 1
        S = H.dot(self.P).dot(H.T) + self.Raccel
        K = self.P.dot(H.T).dot(np.linalg.inv(S))
        x = self.state_vec() + K.dot(y)

        self.P = (np.eye(9) - K.dot(H)).dot(self.P)
        self.set_state_vec(x)

    def update_gyro(self, gyros):
        self.log.gyro(gyros)
        y = gyros - self.w
        y = np.vstack(y)

        H = np.zeros((3, 9))
        H[0, 6] = 1
        H[1, 7] = 1
        H[2, 8] = 1

        S = H.dot(self.P).dot(H.T) + self.Rgyro
        K = self.P.dot(H.T).dot(np.linalg.inv(S))
        x = self.state_vec() + K.dot(y)

        self.P = (np.eye(9) - K.dot(H)).dot(self.P)
        self.set_state_vec(x)

    def update_mag(self, mags):
        """
        See derive.py for discussion of how this works.
        """
        self.log.mag(mags)
        q = self.quaternion()
        roll, pitch, heading = self.es

        mag_inertial = (q * quaternion.Quaternion.from_vec(np.array(mags)) * q.inv()).as_ndarray()[1:]
        mag_inertial[2] = 0
        mag_inertial /= sqrt(mag_inertial[0]**2 + mag_inertial[1]**2)
        mag_body = (q.inv() * quaternion.Quaternion.from_vec(mag_inertial) * q).as_ndarray()[1:]

        h = (q.inv() * quaternion.Quaternion.from_vec(np.array([1.0, 0, 0])) * q).as_ndarray()[1:]
        y = np.vstack(mag_body) - np.vstack(h)
        
        H = np.zeros((3, 9))
        ch2 = np.cos(heading/2)
        cr2 = np.cos(roll/2)
        sh2 = np.sin(heading/2)
        sr2 = np.sin(roll/2)
        H[0, 0] = 0
        H[0, 1] = 0
        H[0, 2] = -2.0*ch2*cr2**2*sh2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2) - 2.0*ch2*sh2*sr2**2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2)
        H[1, 0] = 4.0*ch2*cr2*sh2*sr2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2)
        H[1, 1] = 2.0*ch2**2*cr2*sr2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2) - 2.0*cr2*sh2**2*sr2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2)
        H[1, 2] = -1.0*ch2**2*cr2**2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2) + 1.0*ch2**2*sr2**2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2) + 1.0*cr2**2*sh2**2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2) - 1.0*sh2**2*sr2**2/(1.0*ch2**2*cr2**2 + 1.0*ch2**2*sr2**2 + 1.0*cr2**2*sh2**2 + 1.0*sh2**2*sr2**2)

        S = H.dot(self.P).dot(H.T) + self.Rmag
        K = self.P.dot(H.T).dot(np.linalg.inv(S))
        x = self.state_vec() + K.dot(y)

        self.P = (np.eye(9) - K.dot(H)).dot(self.P)
        self.set_state_vec(x)

    def update_bearing(self, bearing):
        """
        bearing uses same definition of psi; inertial x axis is North
        """
        q0, q1, q2, q3 = self.q
        v_head = np.array([-2*q2**2 - 2*q3**2 + 1, 2*q0*q3 + 2*q1*q2])
        v_bearing = np.array([np.cos(bearing), np.sin(bearing)])
        y = np.vstack(v_bearing) - np.vstack(v_head)

        H = np.zeros((2, 11), dtype=float)
        H[0, 2] = -4*q2
        H[0, 3] = -4*q3
        H[1, 0] = 2*q3
        H[1, 1] = 2*q2
        H[1, 2] = 2*q1
        H[1, 3] = 2*q0

        S = H.dot(self.P).dot(H.T) + (1*np.pi/180)**2
        K = self.P.dot(H.T).dot(np.linalg.inv(S))
        x = self.state_vec() + K.dot(y)

        self.P = (np.eye(11) - K.dot(H)).dot(self.P)
        self.set_state_vec(x)

    def quaternion(self):
        return euler2q(*self.es)

    def eulers(self):
        return self.es

    def turn_rate(self):
        q = self.quaternion()
        return (q*Quaternion.from_vec(self.w)*q.inv()).as_ndarray()[3]

    def __repr__(self):
        euler_angles = self.quaternion().euler_angles()*180/np.pi
        return f"{time.time()-self.t0:5.0f}{euler_angles[0]:7.1f}{euler_angles[1]:7.1f}{euler_angles[2]:7.1f} {self.w[0]*180/np.pi:6.2f}{self.w[1]*180/np.pi:6.2f}{self.w[2]*180/np.pi:6.2f} {self.tas/KTS2MS:.1f} {self.a[0]/G:6.2f}{self.a[1]/G:6.2f}{self.a[2]/G:6.2f}"

    def calc_mag_H(self):
        q0, q1, q2, q3 = self.q
        H = np.zeros((3,10))
        H[0, 0] = -2.0*q0**3 - 2.0*q0*q1**2 + 2.0*q0*q2**2 + 2.0*q0*q3**2 + 2.0*q0
        H[0, 1] = -2.0*q0**2*q1 - 2.0*q1**3 + 2.0*q1*q2**2 + 2.0*q1*q3**2 + 2.0*q1
        H[0, 2] = -2.0*q0**2*q2 - 2.0*q1**2*q2 + 2.0*q2**3 + 2.0*q2*q3**2 - 2.0*q2
        H[0, 3] = -2.0*q0**2*q3 - 2.0*q1**2*q3 + 2.0*q2**2*q3 + 2.0*q3**3 - 2.0*q3
        H[1, 0] = 4.0*q0**2*q3 - 4.0*q0*q1*q2 - 2.0*q3
        H[1, 1] = 4.0*q0*q1*q3 - 4.0*q1**2*q2 + 2.0*q2
        H[1, 2] = 4.0*q0*q2*q3 - 4.0*q1*q2**2 + 2.0*q1
        H[1, 3] = 4.0*q0*q3**2 - 2.0*q0 - 4.0*q1*q2*q3
        H[2, 0] = -4.0*q0**2*q2 - 4.0*q0*q1*q3 + 2.0*q2
        H[2, 1] = -4.0*q0*q1*q2 - 4.0*q1**2*q3 + 2.0*q3
        H[2, 2] = -4.0*q0*q2**2 + 2.0*q0 - 4.0*q1*q2*q3
        H[2, 3] = -4.0*q0*q2*q3 - 4.0*q1*q3**2 + 2.0*q1
        return H

    #@jit(nopython=True)
    def calc_F(self, dt):
        """
        Jacobian with wpredict: [wx,wy,wz]
        """
        roll, pitch, heading = self.es
        wx, wy, wz = self.w
        F = np.zeros((9, 9))

        sh2 = sin(heading/2)
        sp2 = sin(pitch/2)
        sr2 = sin(roll/2)

        ch2 = cos(heading/2)
        cp2 = cos(pitch/2)
        cr2 = cos(roll/2)

        ch = cos(heading)
        sh = sin(heading)

        F[0, 0] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))*(-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wz*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wy*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*((-dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - dt*wy*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + sh2*sp2*cr2 - sr2*ch2*cp2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + (-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)*(dt*wx*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/2 - dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 + dt*wz*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + 0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + (dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wy*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + (-dt*wx*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wz*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/2 - 0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + 2.0*sh2*sr2*cp2 + 2.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[0, 1] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))*(-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - dt*wy*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + dt*wz*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(dt*wx*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + dt*wy*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - dt*wz*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*((-dt*wx*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wy*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + dt*wz*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/2 - 0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + 2.0*sh2*sr2*cp2 + 2.0*sp2*ch2*cr2) + (dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - dt*wy*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - dt*wz*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + sh2*sr2*cp2 - sp2*ch2*cr2) + (-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)*(dt*wx*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/2 - dt*wy*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)/2 + dt*wz*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 - 0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + (dt*wx*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + dt*wy*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - dt*wz*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[0, 2] = (-2*(dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wy*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) - 1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) - dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wz*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) - 1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*(-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*((dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wy*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) - 1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + (dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) - dt*wy*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - sh2*cp2*cr2 + sp2*sr2*ch2) + (-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)*(dt*wx*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/2 - dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wz*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/2 - 0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + (-dt*wx*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/2 + dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 + dt*wz*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/2 + 0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + 2.0*sh2*sr2*cp2 + 2.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[0, 6] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))*(-2*dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - 2*dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)/2 - dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + 2.0*sh2*sr2*cp2 + 2.0*sp2*ch2*cr2)/2 + dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[0, 7] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))*(-2*dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + 2.0*sh2*sr2*cp2 + 2.0*sp2*ch2*cr2)/2 - dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)/2)/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[0, 8] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))*(2*dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + 2.0*sh2*sr2*cp2 + 2.0*sp2*ch2*cr2)/2 - dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)/2 - dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2) + 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2 + (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[1, 0] = -((dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wy*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) - 1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + (dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)*(-dt*wx*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wz*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/2 - 0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + (dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2.0*sh2*sp2*sr2 - 2*ch2*cp2*cr2)*(dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 + dt*wy*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/2 - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + 0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + (dt*wx*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wz*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/sqrt(1 - (2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2)
        F[1, 1] = -((-dt*wx*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wy*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + dt*wz*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/2 - 0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2) + (dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2.0*sh2*sp2*sr2 - 2*ch2*cp2*cr2)*(dt*wx*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)/2 + dt*wy*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/2 - dt*wz*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 - 0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + (dt*wx*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - dt*wy*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + dt*wz*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + (dt*wx*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + dt*wy*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wz*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) - 1.0*sh2*sr2*cp2 + sp2*ch2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/sqrt(1 - (2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2)
        F[1, 2] = -((dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wy*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/2 - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 - 0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*(dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2.0*sh2*sp2*sr2 - 2*ch2*cp2*cr2) + (dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)*(-dt*wx*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/2 + dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 + dt*wz*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/2 + 0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + (dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wy*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) + dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + (-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) - dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wz*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) - 1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/sqrt(1 - (2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2)
        F[1, 6] = -(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)/2 + dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2.0*sh2*sp2*sr2 - 2*ch2*cp2*cr2)/2)/sqrt(1 - (2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2)
        F[1, 7] = -(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2.0*sh2*sp2*sr2 - 2*ch2*cp2*cr2)/2 + dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)/2 + dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/sqrt(1 - (2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2)
        F[1, 8] = -(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)/2 - dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) + dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2.0*sh2*sp2*sr2 - 2*ch2*cp2*cr2)/2 + dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/sqrt(1 - (2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))**2)
        F[2, 0] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*(-2*(dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wy*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wz*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - 1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*((-dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - dt*wy*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + sh2*sp2*cr2 - sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + (dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)*(dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 + dt*wy*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/2 - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + 0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + (-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)*(-dt*wx*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wz*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/2 - 0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + (dt*wx*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2) - dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wz*(0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[2, 1] = (-2*(-dt*wx*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wy*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) + dt*wz*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - 1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*(dt*wx*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + dt*wy*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - dt*wz*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))*(-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*((-dt*wx*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wy*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 + dt*wz*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/2 - 0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2) + (dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)*(dt*wx*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)/2 + dt*wy*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/2 - dt*wz*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)/2 - 0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + (dt*wx*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2) - dt*wy*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + dt*wz*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + (-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2) - dt*wy*(-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - dt*wz*(-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2) + sh2*sr2*cp2 - sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[2, 2] = (-2*(dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wy*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) - 1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) + dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) + dt*wz*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) + sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*(-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*((dt*wx*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)/2 + dt*wy*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/2 - dt*wz*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 - 0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2) + (-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)*(-dt*wx*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/2 + dt*wy*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)/2 + dt*wz*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/2 + 0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + (-dt*wx*(-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2) - dt*wy*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) - dt*wz*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) - sh2*cp2*cr2 + sp2*sr2*ch2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + (dt*wx*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2) - dt*wy*(0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2) + dt*wz*(-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2) - 1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[2, 6] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*(2*dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - 2*dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)/2 + dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)/2)/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[2, 7] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*(-2*dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)/2 + dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)/2 - dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[2, 8] = (-2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*(-2*dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2*dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2) + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)*(dt*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + 2.0*sh2*sp2*sr2 + 2*ch2*cp2*cr2)/2 - dt*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2) - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - 2.0*sh2*sp2*cr2 + 2.0*sr2*ch2*cp2)/2 + dt*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - dt*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((2*(dt*wx*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wy*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wz*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - 1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) + 2*(-dt*wx*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 - dt*wy*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 - dt*wz*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + 1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))**2 + (-2*(-dt*wx*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)/2 + dt*wy*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + dt*wz*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 + 1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2 - 2*(dt*wx*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)/2 + dt*wy*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/2 - dt*wz*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)/2 + 1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + 1)**2)
        F[3, 0] = (0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2)
        F[3, 1] = (0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[3, 2] = (0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[4, 0] = (0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[4, 1] = (-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (-0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[4, 2] = (-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[5, 0] = (-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (-0.5*sh2*sr2*cp2 - 0.5*sp2*ch2*cr2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 - sr2*ch2*cp2/2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*cp2*cr2 - 0.5*sp2*sr2*ch2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(tan(roll)**2 + 1)*sh/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(tan(roll)**2 + 1)*ch/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sp2*cr2 - sr2*ch2*cp2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2) - (-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[5, 1] = (-0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(0.5*sh2*sr2*cp2 - sp2*ch2*cr2/2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2) + (0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(-G*(0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(-1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(sh2*sr2*cp2 - sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*cp2*cr2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2))
        F[5, 2] = (0.5*sh2*sp2*sr2 + 0.5*ch2*cp2*cr2)*(G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-0.5*sh2*sp2*cr2 + 0.5*sr2*ch2*cp2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*(G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)*(-G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 - G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (-sh2*cp2*cr2/2 + 0.5*sp2*sr2*ch2)*(-G*(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)) + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)*(G*(-0.5*sh2*sp2*sr2 - 0.5*ch2*cp2*cr2)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(0.5*sh2*sp2*cr2 - 0.5*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(1.0*sh2*sp2*cr2 - 1.0*sr2*ch2*cp2)*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) - G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))*ch*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2 + G*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(0.5*sh2*sr2*cp2 + 0.5*sp2*ch2*cr2)*sh*tan(roll)/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2) + G*(-1.0*sh2*cp2*cr2 + 1.0*sp2*sr2*ch2)*(-(1.0*sh2*sp2*sr2 + ch2*cp2*cr2)*(-sh2*cp2*cr2 + sp2*sr2*ch2) - (sh2*sp2*sr2 + ch2*cp2*cr2)*(1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2) - (-1.0*sh2*sp2*cr2 + sr2*ch2*cp2)*(1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2) - (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)*(-1.0*sh2*sr2*cp2 - 1.0*sp2*ch2*cr2))/((1.0*sh2*sp2*sr2 + ch2*cp2*cr2)**2 + (-1.0*sh2*sp2*cr2 + 1.0*sr2*ch2*cp2)**2 + (1.0*sh2*sr2*cp2 + 1.0*sp2*ch2*cr2)**2 + (1.0*sh2*cp2*cr2 - 1.0*sp2*sr2*ch2)**2)**2)
        F[6, 6] = 1
        F[7, 7] = 1
        F[8, 8] = 1        

        return F
